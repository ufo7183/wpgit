# 🚀 WordPress 開發 SOP 大全

這是一套完整的 WordPress 開發 SOP，確保每次開發新功能時能夠**高效、準確、不重工**。

---

## 🔥 **開發前準備：逛倉庫找現貨**
**目標：** 先確認有沒有現成的工具，不做白工！

1️⃣ **逛 GitHub & 外部資源** → 找找有沒有現成的工具可以用。
2️⃣ **逛我們自己的 `wpgit` 倉庫** → 檢查是否已經有相關功能。
3️⃣ **決定：「帶走 or 自己寫」** →
   - 有現成工具就帶走（Git Submodule）。
   - 如果沒有，就自己寫並存進 Git 倉庫。

💡 **Tips：**
- GitHub 上找不到？試試 `wp.org` 或其他開源網站！
- `wpgit` 可能已經有舊工具可以改造，先確認後再寫！

🚨 **以下情況，請回頭看 SOP：**
- 開發過程中突然發現有類似功能，懷疑有現貨
- 變更開發需求，可能影響現有功能
- 遇到「不知道該怎麼做」的開發狀況
---

## 🛠 **Step 1：正式開發前順流程，再逛一次倉庫**
**目標：** 確保開發流程沒問題，資源已經最優化。

4️⃣ **每次正式開發前，先順一遍開發流程**，確認沒漏步驟。
5️⃣ **順完流程後，再逛一次倉庫**，確保沒有遺漏最新的開發資源。

💡 **Tips：**
- 這一步能避免「開到一半才發現有現成的工具」，減少重工！
- 順流程時，回頭看「現有工具能不能再優化」。

---

## ✅ **Step 2：確認檔案庫**
**目標：** 把好用的工具存起來，確保未來能快速取用。

6️⃣ **確認好用的工具，存進「檔案庫」**，以防 GitHub 失效。

💡 **Tips：**
- 這裡存的應該是 **未來可重用的工具**，而不是一次性開發的功能。
- 記得更新 README 或筆記，讓未來能快速找到。

---

## 🔄 **Step 3：變更開發規格時，記得逛倉庫！**
**目標：** 確保每次改規格都能用上現有資源，不走冤枉路。

7️⃣ **每次變更開發規格時，先逛倉庫找現貨**，避免重工。
8️⃣ **確認變更後的規格是否影響既有工具**，確保兼容性。

💡 **Tips：**
- 變更可能影響已經寫好的東西，確認影響範圍再動手！
- 可以順便看看「之前遺漏的功能」要不要補上。

---
⚠️ **請確認你的工作目錄沒有未提交的變更，`git clean -df` 會刪除所有未追蹤的檔案！**

---

## 🎯 **SOP 口訣**
📌 **功能有問題，倉庫去尋覓；現貨快帶走，寫新慢一籌！**

開發流程：
[🔍] 逛倉庫找現貨  →  [✅] 選擇帶走 or 自己寫  →  [🛠] 確認功能需求 →  [🚀] 正式開發
         ↘                               ↙
        [📂] 檔案庫存放 & 紀錄

❌ **錯誤回報格式**
- **錯誤內容**（錯誤訊息 or 你看到的異常）
- **目前執行的步驟**（你剛剛做了什麼？）
- **目標**（你當初是想達成什麼結果？）
- **相關檔案 / 代碼**（如果有的話）
- **試過的解法**（如果有的話）

🚨 **變更規格前，請確認這些事項！**
- 變更是否影響舊有功能？
- 這次變更會不會影響 WordPress 其他外掛的相容性？
- 有沒有現有的類似工具可以修改，而不是重寫？


